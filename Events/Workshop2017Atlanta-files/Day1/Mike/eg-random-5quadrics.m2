-----------------
-- Open problem: over all ideals generated by 5 homogeneous quadrics
-- what is the maximum possible regularity?
--

-- to note: a general very useful way to use M2 is inside emacs.
-- these days, emacs can be used without knowing all the arcane
-- keyboard shortcuts (although those are useful!).
--
-- f12: start M2
-- f11: in a file foo.m2 (ending in .m2), send the current line or selection
--  to M2 (in the *M2* buffer).
--

restart
R = ZZ/32003[vars(0..7)]
gens R

rand = method()
-- A function returning a random binomial quadric
rand Ring := (R) -> (
    n := numgens R;
    R_(random n) * R_(random n) - 
    R_(random n) * R_(random n)
    )

rand R

-- returns  an ideal generated by 'nquadrics' random quadrics
rand(ZZ, Ring) := (nquadrics, R) -> (
    ideal for i from 1 to nquadrics list rand R
    )

rand(3,R)

-- Now let's try 5 quadrics
I = rand(5, R)

-- do we have a good example?
I = trim I
numgens I == 5
codim I < 5
  -- (continue until we do)

C = res I

C.dd_1
C.dd_2
betti C
C.dd_3
betti C
C.dd_4
regularity I -- one larger than last row of betti
L = for i from 1 to 10 list rand(5,R);
#L
L/codim
tally oo
L/codim//tally
L3 = select(L, J -> codim J == 3);
#L3
L3/(I -> regularity I)//tally
L/(I -> regularity I)//tally

L = for i from 1 to 1000 list rand(5,R);
L/(I -> regularity I)//tally

for i from 1 to 1000 do (
    I = rand(5,R);
    if codim I == 5 then continue;
    C = res I;
    reg := regularity I;
    if reg > 5 then
        << "regularity: " << reg << " betti: " << betti C << " " << toString I << endl;
    )

egs = for i from 1 to 10000 list (
    I = rand(5,R);
    if codim I == 5 then continue;
    C = res I;
    reg := regularity I;
    if reg <= 5 then continue;
    (betti C, toString I)
    )
egs/first//tally
select(egs, x -> regularity x#0 == 6)/last

-- one that was found (in case our random search doesn't pick any up!)
ideal(-c*e+e^2,-e*h+h^2,c*f-b*h,-c*d+f*g,e*f-b*g)
betti res oo
